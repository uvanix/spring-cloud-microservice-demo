spring:
  application:
    name: cloud-service-bbb
  profiles:
    active: dev
  cloud:
    inetutils:
      use-only-site-local-interfaces: true
    loadbalancer:
      retry:
        enabled: true
server:
  port: ${PORT:7002}
logging:
  config: classpath:config/logback-config.xml
  file: logs/cloud-service-bbb.log
  level:
    org:
      springframework:
        transaction: debug
      mybatis: debug
    com:
      uvanix:
        cloud: debug
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
info:
  app:
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"
feign:
  hystrix:
    enabled: true
ribbon:
  ConnectTimeout: 3000
  ReadTimeout: 3000
  MaxAutoRetries: 1 # 同一台实例的最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 2 # 重试负载均衡其他实例的最大重试次数,不包括首次实例
  OkToRetryOnAllOperations: false # 是否所有的操作都重试
hystrix:
  command:
    default:
      circuitBreaker:
        requestVolumeThreshold: 100 # 一个rolling window内最小的请求数
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 36000 # hystrixTimeout = (commandRibbonConnectTimeout + commandRibbonReadTimeout) x (commandRibbonMaxAutoRetries + 1) x (commandRibbonMaxAutoRetriesNextServer + 1)
  threadpool:
    default:
      coreSize: 10 # 并发执行的最大线程数，默认10
      maxQueueSize: -1 # BlockingQueue的最大队列数，值为-1，使用SynchronousQueue
      queueSizeRejectionThreshold: 100 # 即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝(maxQueueSize=-1失效)
      execution:
        timeout:
          enabled: true
        isolation:
          strategy: THREAD
          semaphore:
            maxConcurrentRequests: 30000
          thread:
            timeoutInMilliseconds: 30000
# 开发环境 use command to startup [ nohup mvn clean spring-boot:run > /dev/null 2>&1 & ]
---
spring:
  profiles: dev
eureka:
  instance:
    hostname: ${spring.application.name}
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    home-page-url-path: http://${spring.cloud.client.ip-address}:${server.port}/actuator
    status-page-url: ${eureka.instance.home-page-url-path}/info
    health-check-url-path: ${eureka.instance.home-page-url-path}/health
    leaseRenewalIntervalInSeconds: 5
    lease-expiration-duration-in-seconds: 15
  client:
    health:
      enabled: true
    serviceUrl:
      defaultZone: http://user:password@localhost:8761/eureka/
    registryFetchIntervalSeconds: 5
