spring:
  application:
    name: cloud-eureka-server
  profiles:
    active: localhost

server:
  port: ${PORT:8761}

security:
  user:
    name: user
    password: ${PASSWORD:password}

# 单节点 use command to startup [ mvn spring-boot:run ]
---
spring:
  profiles: localhost
eureka:
  instance:
    hostname: ${spring.profiles}
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
    # 设置是否从注册中心获取注册信息（缺省true）
    # 因为这是一个单点的EurekaServer，不需要同步其它EurekaServer节点的数据，故设为false
    fetch-registry: false
    # 设置是否将自己作为客户端注册到注册中心（缺省true）
    # 这里为不需要（查看@EnableEurekaServer注解的源码，会发现它间接用到了@EnableDiscoveryClient）
    register-with-eureka: false
    serviceUrl:
      defaultZone: http://${security.user.name}:${security.user.password}@${eureka.instance.hostname}:${server.port}/eureka/

# 集群节点1 use command to startup [ mvn spring-boot:run -Drun.jvmArguments="-Dspring.profiles.active=peer1" ]
---
spring:
  profiles: peer1
server:
  port: ${PORT:8001}
eureka:
  instance:
    hostname: ${spring.profiles}
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
    serviceUrl:
      defaultZone: http://${security.user.name}:${security.user.password}@peer2:8002/eureka/

# 集群节点2 use command to startup [ mvn spring-boot:run -Drun.jvmArguments="-Dspring.profiles.active=peer2" ]
---
spring:
  profiles: peer2
server:
  port: ${PORT:8002}
eureka:
  instance:
    hostname: ${spring.profiles}
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
    serviceUrl:
      defaultZone: http://${security.user.name}:${security.user.password}@peer1:8001/eureka/
